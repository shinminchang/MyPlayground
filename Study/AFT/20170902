1. 알고리즘.
  - 스택 (LIFO 구조)
    함수를 재귀호출할때 스택에 하나씩 쌓이게된다.
  
  - 소스
    class push(String pushItem){
      var leng_stack = stack.length();
      
      if (leng_stack < 11){
        stack[length_stack] = pushItem;
      } else {
        system.out.println("overflow");
      }
    }
    
    class pop() {
      var length_stack = stack.length();
      
      if (length_stack > 0){
        stack[length_stack-1] = "";
      } else {
        system.out.println("underflow");
      }
    }
    
    * ++i와 i++의 차이
      ++i = 1이 이미 더해진 값으로 계산
      i++ = 이 위치를 지나야 1을 더한값으로 계산

  - 소스 (수정)
    var i = -1;

    class push(String pushItem){
      if (++i >= 10){
        system.out.println("overflow !!!");
        return false;
      }

      stack[++i] = pushItem;
    }

    class pop(){
      if (i < 0){
        system.out.println("underflow !!!");
        return false;
      }

      stack[--i] = "";
    }
      
2. python 문법
  - class 선언
    class myTest() :
  - fynction 선언
    def myTest() :
  - if 문
    if "aaa" and "bbb" or "ccc" :
  - for 문
    for a range b :
  - 출력
    print('aaa')
    
3. nginx 설치 후 웹 사이트와 연동
  - nginx 설치
    brew install nginx
  - conf 파일 설정
    server
    {
	listen 80;
	server_name aft.com;

	access_log /var/log/nginx/hulk-access.log;
	error_log /var/log/nginx/hulk-error.log; # debug;

	rewrite_log on;

	location / {
	   add_header 'Access-Control-Allow-Origin' '*';
	   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	   proxy_pass http://localhost:3000/;
        }
    }

4. bash_profile에 alias등록
    alias nginx.start='sudo launchctl load /Library/LaunchDaemons/homebrew.mxcl.nginx.plist'
    alias nginx.stop='sudo launchctl unload /Library/LaunchDaemons/homebrew.mxcl.nginx.plist'
    alias nginx.restart='nginx.stop && nginx.start'
    


* 메모
  - 앞단 소스 변경시
    ng build --watch
  - ansible (소스 자동배포 프로그램)
    윈도우 지원하는지    
  - pycharm pro 설치
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
commit test
